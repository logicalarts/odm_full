



May 6th, 2003

Abstract

OpenDocMan is a full featured Web-based document management
system designed to conform to ISO 17025/IEC. It features
automatic installation, file check-in/out, departmental
access control, file moderation, fine grained user access
control, email notificaiton and a great search function.
Written in PHP, and utilizing MySQL for the backend, this
project is useful for any company looking to keep their
documentation in a centralized repository.

Table of Contents

1 Introduction
    1.1 Features
    1.2 Requirements
2 Installation and Updating
    2.1 Update Procedure
    2.2 New Installation
3 Configuration
    3.1 config.php
    3.2 Administration Editor
4 Tutorial
    4.1 Adding a file
    4.2 Adding a user
    4.3 Authorizing a file
    4.4 Checking out a file
5 Credits
6 Automated Installation and Upgrade Notes (For Developers)



1 Introduction

1.1 Features

1. Automatic Installation - Automatically install the application
  or upgrade your current version

2. Check-in and Check-out files - This provides file locking
  so that no two persons can update the same file at the
  same time

3. Search Engine - Keyword search helps locate documents quickly

4. Multiple Users, Departments, and Categories - The system
  allows for an unlimited number of these elements

5. File Moderation - Allows for departmental "reviewers"
  to authorize or decline files for publication to the repository

6. Email Notification - The system has a built in email notification
  system for file authorization process

7. Fine Grained Access - Ability to control read/write/admin/forbidden
  permissions for individual files based on users or groups
  or both.

8. File History - Provides a history of actions taken upon
  a file

9. Admin and Root users - Each installation can have any number
  of "admin" users, who can create users,
  categories, etc.. One "root"
  user can do all.

1.2 Requirements

* Apache Webserver 1.3.x (or any other webserver, that supports
  PHP) (http://www.apache.org/)

* MySQL Server 3.22+ (http://www.mysql.com/)

* PHP 4+ compiled with MySQL-Support (http://www.php.net/)

2 Installation and Updating

2.1 Update Procedure

To update your current version to the latest release:

1. Rename your current opendocman folder.

2. Unarchive opendocman into a new folder

3. Edit the config.php in your new folder (Look at your old
  config.php file for some settings that can be transferred
  over from the old config to the new).

4. Load the setup.php page (ex. http://www.mydomain.com/opendocman/setup.php)
  and click on the appropriate upgrade link. Refer to your
  old config.php to see what version you were using before.

2.2 New Installation

1. Untar files into any dir in your webserver documents dir
  (ex. /var/www)

2. Edit config.php

  (a) All parameters are commented and should be self explanatory.
    Change any that apply, especially the database parameters.

3. If you DO have database creation permissions to your MySQL
  database then you can use the automatic setup script (preferred
  method).

  (a) Load the setup.php page and click on the new install
    link. (ex. http://www.mydomain.com/opendocman/setup.php)

  (b) Enter the username and password of a user that has database
    creation permissions for the database configured in
    config.php

  (c) Skip step 4 and move on to step 5

4. If you DO NOT have database creation permissions, be advised
  that you should be carefull in doing things manually

  (a) NOTE: The entries below are just examples.

  (b) create a MySQL-database and MySQL-User for opendocman

    $> mysql -u root -p

    Welcome to the MySQL monitor. Commands end with ; or
    \g.

    Your MySQL connection id is 5525 to server version: 3.22.32

    Type 'help' for help.

    mysql> create database opendocman;

    mysql> grant select,insert,update,delete,create on opendocman.*
    to opendocman@localhost identified by 'opendocman';

    mysql> flush privileges;

    mysql> exit;

    $> mysql -u opendocman -p opendocman < database.sql

5. Make a directory for the files to be stored that is accessible
  to the web server but not available by browsing

  $>mkdir /usr/local/opendocman/data

6. Point your favorite webbrowser to the opendocman folder:
  ex. "http://www.mydomain.com/opendocman"

7. Login as "admin" (without password). After that, go to
  "admin->users->update->admin" and set your admin password.

8. Add departments, categories, users, etc.

9. Enjoy!

3 Configuration

3.1 config.php

Most of the configuration for OpenDocMan is controlled by
a file name config.php. Below are some of the configurable
options in that file:

* $database - The name of the database used (ex. opendocman)

* $user - The user that has update/insert/delete permissions
  on above database

* $pass - Password for above user

* $hostname - The hostname of the database server (ex. db1.mydomain.com)

* demo - This setting is for a demo installation, where random
  people will be all loggging in as the same username/password
  like 'demo/demo'.

* authen - Future setting to control other authentication
  methods. Currently only MySQL and web-based kerberos authentication
  is supported.

* page_limit - Set the number of files that show up on each
  page

* displayable_len - Set the maximum displayable length of
  text field in file list

* base_url - Set this to the url of the site (no ending slash)

* title - This is the browser window title and be anything
  you want (ex. Mycomany Document Managment System)

* current_version - This is the program version for window
  title (This should be set to the current version of the
  program)

* site_mail - The email address of the administrator of this
  site. Users will be told to contact this person if they
  encounter errors.

* root_username - This variable sets the root username. It
  must be set to one of the current users of opendocman.
  The root user will be able to access all files and have
  authority for everything. (ex. jsmith)

* dataDir - Location of file repository. This should ideally
  be outside the Web server root. Make sure the server has
  permissions to read/write files in this folder!

* $allowedFileTypes - This is a list of file types that will
  be allowed to be added to the repository. This may need
  some tweeking depending on what types of files your users
  have.

3.2 Administration Editor

When a user is set up as an "admin",
they will see an admin menu in the upper right while they
are logged in. There are options for User, Category, and
Department management under this menu item.

4 Tutorial

4.1 Adding a file

4.2 Adding a user

4.3 Authorizing a file

4.4 Checking out a file

5 Credits

Stephen Lawrence Jr. - Project Lead/Programmer

Khoa Nguyen - PHP and Javascript Programming

Originally inspired by an article called cracking the vault.

6 Automated Installation and Upgrade Notes (For Developers)

There is a new folder named "install" which contains files
use by the new script called setup.php. This is an automated
web-based update/installation script. Here is how it works
for users:

1. The user loads setup.php into their browser. They can either
  select the new installation link, or one of the upgrade
  links.

2. For a new installation:

  (a) The user will be prompted to enter a priviledged mysql
    username and password. This is for the database creation
    and grant assignments. The script will then proceed
    to install all the necessary data structures and default
    data entries for the most current version of ODM.

3. For updates:

  (a) The user will need to find their current version (which
    comes from their old config.php), and they would then
    click on the appropriate upgrade link. For example,
    if their version number is 1.0, they would click on
    the "Upgrade from 1.0" link. This will apply all necessary
    database changes to their current database.

For developers, when there is a new version release, a few
new files need to be created and a current files modified.

1. upgrade_x.php - where x is the release name. This file
  should follow the same format as the other upgrade_x.php
  files and is used for upgrades only. This should be built
  from the output of a program like mysqldiff.pl and is
  the "diff"erence between the it's version, and the version
  before it. 

2. Setup.php - add a new function for the new version upgrade
  (ex. "do_update_x()") where x is the release name. 

  (a) Inside this new function, you must "include" each previous
    upgrade file in succession (see upgrade_10.php for an
    exmaple, which is for a user upgrading from 1.0 to the
    latest). 

  (b) Add a new case statement for the new upgrade call 

  (c) Add a new link to print_intro() for the upgrade function

3. odm.php - This file should follow the same format as the
  current odm.php file, and should contain all the necessary
  sql commands to create a new installation based on the
  latest database schema. 

4. database.sql - This should contain the same sql commands
  as odm.php, only in a mysqldump format for users that
  need to manually install the program for some reason.
  This can be a mysqldump straight from the latest database
  schema.

These files MUST be kept syncronized for each release!
